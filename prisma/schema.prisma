// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//
// ðŸ”¹ Admin Table
//
model Admin {
  id               Int      @id @default(autoincrement())
  email            String   @unique
  password         String
  role             Role     @default(ADMIN)
  resetToken       String?  @unique
  resetTokenExpiry DateTime?
  createdAt        DateTime @default(now())

  @@map("admins")
}

//
// ðŸ”¹ User Table
//
model User {
  id                Int       @id @default(autoincrement())
  name              String
  email             String    @unique
  password          String
  phone             String?
  address           String?
  stripeCustomerId  String?   @unique
  isActive          Boolean   @default(true)
  emailVerified     Boolean   @default(false)
  verificationToken String?   @unique
  resetToken        String?   @unique
  resetTokenExpiry  DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  orders            Order[]
  couponUsages      CouponUsage[]

  @@map("users")
}

//
// ðŸ”¹ Product Table (Synced from Printify)
//
model Product {
  id                Int       @id @default(autoincrement())
  name              String
  description       String
  price             Float
  images            String[]
  printifyProductId String    @unique
  sku               String?
  category          String?
  inStock           Boolean   @default(true)
  
  // ðŸ”¥ NEW: Printify-specific fields
  printifyVariants          Json?     // Store all variants as JSON array
  printifyBlueprintId       Int?
  printifyPrintProviderId   Int?
  
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  orders            OrderItem[]

  @@map("products")
}

//
// ðŸ”¹ Order Table
//
model Order {
  id                  Int              @id @default(autoincrement())
  userId              Int
  totalAmount         Float
  paymentStatus       PaymentStatus    @default(PENDING)
  fulfillmentStatus   FulfillmentStatus @default(PLACED)
  stripePaymentIntentId String?        @unique
  stripeSessionId     String?          @unique
  shippingAddress     Json?
  createdAt           DateTime         @default(now())  

  // ðŸ”¥ Printify integration fields
  printifyOrderId     String?          @unique
  orderImage          String?          // Custom design image
  orderNotes          String?          // Special instructions
  
  // ðŸ”¥ NEW: Coupon fields
  couponCode      String?
  discountAmount  Float?   @default(0)
  subtotalAmount  Float    // Amount before discount
  couponId        Int?
  
  // Relations
  user    User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  items   OrderItem[]
  couponUsage CouponUsage?

  @@map("orders")
}

//
// ðŸ”¹ OrderItem Table (Updated)
//
model OrderItem {
  id                  Int     @id @default(autoincrement())
  orderId             Int
  productId           Int
  quantity            Int
  price               Float

  // Printify specific fields
  printifyVariantId       String?
  printifyBlueprintId     Int?
  printifyPrintProviderId Int?
  size                 String?  // Added size field
  color                String?  // Added color field

  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])

  @@unique([orderId, productId, printifyVariantId])
  @@map("order_items")
}

//
// ðŸ”¹ NEW: Coupon Code Table
//
model Coupon {
  id               Int       @id @default(autoincrement())
  code             String    @unique
  description      String?
  discountType     DiscountType @default(PERCENTAGE)
  discountValue    Float     // Percentage (10.0) or Fixed amount (15.00)
  minOrderAmount   Float?    @default(0)
  maxDiscountAmount Float?   // For percentage discounts only
  usageLimit       Int?      // Total usage limit
  usedCount        Int       @default(0)
  validFrom        DateTime  @default(now())
  validUntil       DateTime?
  isActive         Boolean   @default(true)
  isSingleUse      Boolean   @default(false) // One-time use per user
  applicableTo     CouponApplicability @default(ALL_PRODUCTS)
  categories       String[]  // For CATEGORY_SPECIFIC
  products         Int[]     // For PRODUCT_SPECIFIC (product IDs)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  // Relations
  couponUsages CouponUsage[]

  @@map("coupons")
}

//
// ðŸ”¹ NEW: Coupon Usage Table (Track usage per user)
//
model CouponUsage {
  id        Int      @id @default(autoincrement())
  couponId  Int
  userId    Int
  orderId   Int
  usedAt    DateTime @default(now())

  // Relations
  coupon Coupon @relation(fields: [couponId], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  order  Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@unique([couponId, userId]) // For single-use per user
  @@unique([orderId]) // One coupon per order
  @@map("coupon_usages")
}

//
// ðŸ”¹ Contact Inquiry Table
//
model ContactInquiry {
  id              Int       @id @default(autoincrement())
  name            String
  email           String
  phone           String?
  subject         String
  message         String
  inquiryType     InquiryType @default(GENERAL)
  status          InquiryStatus @default(PENDING)
  callbackTime    DateTime?
  adminNotes      String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@map("contact_inquiries")
}

//
// ðŸ”¹ Currency Table
//
model Currency {
  code        String   @id
  name        String
  symbol      String
  rate        Float    @default(1.0)
  countryCodes String[] // Store as JSON array
  locale      String   @default("en-US")
  isActive    Boolean  @default(true)
  lastUpdated DateTime @default(now())

  @@map("currencies")
}

//
// ðŸ”¹ Currency Update Log Table
//
model CurrencyUpdateLog {
  id          Int      @id @default(autoincrement())
  base        String   @default("USD")
  ratesCount  Int
  success     Boolean
  error       String?
  source      String?
  createdAt   DateTime @default(now())

  @@map("currency_update_logs")
}

//
// ðŸ”¹ Enums
//
enum Role {
  ADMIN
  SUPER_ADMIN
}

enum PaymentStatus {
  PENDING
  SUCCEEDED
  FAILED
  REFUNDED
}

enum FulfillmentStatus {
  PLACED
  PROCESSING
  SHIPPED 
  DELIVERED
  CANCELLED
}

enum PaymentMethod {
  CARD
  PAYPAL
  APPLE_PAY
  GOOGLE_PAY
}

enum InquiryType {
  GENERAL
  ORDER_SUPPORT
  PRODUCT_QUESTION
  SHIPPING
  RETURNS
  COMPLAINT
  FEEDBACK
  OTHER
}

enum InquiryStatus {
  PENDING
  IN_PROGRESS
  RESOLVED
  CLOSED
  SPAM
}

//
// ðŸ”¹ NEW: Coupon Enums
//
enum DiscountType {
  PERCENTAGE
  FIXED_AMOUNT
}

enum CouponApplicability {
  ALL_PRODUCTS
  CATEGORY_SPECIFIC
  PRODUCT_SPECIFIC
}